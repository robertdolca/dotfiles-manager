#!/bin/bash

HERE=`dirname $0`
REPO="$HERE/files/"

function homepath {
	len=`expr ${#HOME} + 1`
	echo ${1:$len}
}

function collect {

	# Create the repo folder if it's not present
	mkdir -p $REPO

	# Create the local white/blacklist
	mkdir -p "$HOME/.dotfiles"
	touch "$HOME/.dotfiles/whitelist.txt"
	touch "$HOME/.dotfiles/blacklist.txt"

	# There is a global versioned white/blacklist and there is a local one
	whitelist=`cat $HERE/whitelist.txt $HOME/.dotfiles/whitelist.txt 2> /dev/null`
	blacklist=`cat $HERE/blacklist.txt $HOME/.dotfiles/blacklist.txt 2> /dev/null`

	# Remove empty lines
	whitelist=`echo "$whitelist" | grep -v '^$'`
	blacklist=`echo "$blacklist" | grep -v '^$'`

	# Check if the whitelist is empty
	if ! [ -n "$whitelist" ]; then
		echo "Error: the whitelist can not be empty"
		exit 1
	fi

	# Make a string with all the whitelisted files (separated by space)
	search=`echo -n "$whitelist" | perl -p -e "s#\n#\" \"$HOME/#"`
	search="\"$HOME/$search\""

	# Check if there is anything blacklisted
	if [ -n "$blacklist" ]; then
		blacklist=`echo -n "$blacklist" | perl -p -e "s#/\\$##"`
		ignore=`echo -n "$blacklist" | perl -p -e "s#\n#\" -o -path \"$HOME/#"`
		ignore="\( -path \"$ignore\" \) -prune -o -print"
	else
		ignore=""
	fi

	files=`eval find $search $ignore 2> /dev/null`

	# For each entry in the list
	for filepath in $files; do

		# Get the path relative to the home folder
		filename=`homepath $filepath`

		# If it's a folder we don't need it
		if [ -f $filepath ]; then
			# Show the file name for tracing
			echo $filename

			# If the folder containing the
			# file does not exit create it
			mkdir -p "$REPO/`dirname $filename`"

			# Copy the file
			cp $filepath $REPO/$filename
		fi
	done
}

function show_help {
	echo "./dotfiles [collect|deploy]"
}

case $1 in
	collect)
		collect
		;;
	deploy)
		deploy
		;;
	*)
		show_help
		;;
esac
